import os
import re
import threading
import telebot
from flask import Flask
import requests
import time
import gc

# === Telegram bot setup ===
BOT_TOKEN = os.getenv("BOT_TOKEN")
bot = telebot.TeleBot(BOT_TOKEN)

YES_PATTERN = re.compile(r'^(–¥–∞+|–¥a+|da+|d–∞+)$', re.IGNORECASE)

@bot.message_handler(func=lambda message: message.text and YES_PATTERN.match(message.text.strip()))
def reply_yes(message):
    bot.send_message(message.chat.id, "–ü–∏–∑–¥–∞!")


@bot.message_handler(func=lambda message: True)
def ignore_all(message):
    pass

# === Flask web server ===
app = Flask(__name__)

@app.route('/')
def index():
    return "Bot is running!", 200

# === –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–µ–≥—É–ª—è—Ä–Ω–æ–≥–æ –ø–∏–Ω–≥–∞ —Å–∞–º–æ–≥–æ —Å–µ–±—è ===
def self_ping():
    url = os.environ.get("SELF_URL")
    if not url:
        print("‚ö†Ô∏è SELF_URL –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω ‚Äî –ø–∏–Ω–≥–æ–≤–∞–Ω–∏–µ –Ω–µ –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å")
        return
    while True:
        try:
            requests.get(url, timeout=5)
            print("üîÑ Self-ping –≤—ã–ø–æ–ª–Ω–µ–Ω")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–∏–Ω–≥–∞: {e}")
        time.sleep(600)  # 10 –º–∏–Ω—É—Ç

# === –û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞ –∏ —Å–±–æ—Ä–∫–∞ –º—É—Å–æ—Ä–∞ –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç ===
def cleanup_memory():
    while True:
        gc.collect()
        print("üßπ –û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞ –∏ —Å–±–æ—Ä–∫–∞ –º—É—Å–æ—Ä–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞")
        time.sleep(300)  # 5 –º–∏–Ω—É—Ç

def run_flask():
    port = int(os.environ.get("PORT", 8080))
    app.run(host="0.0.0.0", port=port)

def run_bot():
    print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ —Å–ª—É—à–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è...")
    bot.infinity_polling()

if __name__ == "__main__":
    # Flask –≤–µ–±-—Å–µ—Ä–≤–µ—Ä –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
    threading.Thread(target=run_flask).start()
    # –ü–∏–Ω–≥ —Å–∞–º–æ–≥–æ —Å–µ–±—è
    threading.Thread(target=self_ping).start()
    # –û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞
    threading.Thread(target=cleanup_memory).start()
    # –ë–æ—Ç
    run_bot()
